name: CI-Windows-macOS

on:
  pull_request:
    branches:
      - master
  # Manual run
  workflow_dispatch:

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.6, 3.8, '3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          python -m pip install numpy>=1.19.5
          python -m pip install scipy>=1.2.1
          python -m pip install pandas>=1.0.0
          python -m pip install scikit-learn>=0.20.0
          python -m pip install tensorflow>=1.15.0
          python -m pip install torch>=1.10.0
          python -m pip install "smart_open<7.0.0"
          python -m pip install gensim>=4.0.0
          python -m pip install tqdm
          python -m pip install -e .

      - name: Install DGL on Windows
        run: python -m pip install 'dgl<=1.1.0' -f https://data.dgl.ai/wheels/repo.html
        if: matrix.os == 'windows-latest'

      - name: Install DGL on macOS
        run: python -m pip install dgl -f https://data.dgl.ai/wheels/repo.html
        if: matrix.os == 'macos-latest'

      - name: Install dataclasses
        run: |
          python -m pip install dataclasses
        if: matrix.python-version == '3.6'

      - name: Install recfarm
        run: |
          python -m pip install recfarm
        if: matrix.python-version != '3.6'

      - name: Test with pytest
        run: |
          python -m pip install pytest
          python -m pytest tests/ --ignore="tests/serving"
