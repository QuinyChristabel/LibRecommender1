name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Manual run
  workflow_dispatch:

jobs:
  build:
    name: testing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          python -m pip install -r requirements-ci.txt
          python -m pip install -e .

      - name: Lint with flake8
        run: |
          flake8 libreco/ libserving/ tests/ examples/

      - name: Lint with ruff
        run: |
          ruff check --format=github libreco/ libserving/ tests/ examples/
        if: matrix.python-version != '3.6'

      - name: Set up Redis
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '7.x'
        if: matrix.python-version != '3.6'

      - name: Test Redis
        run: redis-cli ping
        if: matrix.python-version != '3.6'

      - name: Test for python3.6
        run: |
          python -m pip install pytest coverage
          coverage run -m pytest tests/ --ignore="tests/serving"
        if: matrix.python-version == '3.6'

      - name: Test with pytest and coverage
        run: |
          python -m pip install -r requirements-serving.txt
          bash tests/serving/setup_coverage.sh
          coverage --version && coverage erase
          coverage run -m pytest tests/
          coverage combine && coverage report
          coverage xml
        if: matrix.python-version != '3.6'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: CI
          name: python${{ matrix.python-version }}-test
          fail_ci_if_error: false
          verbose: true
        if: matrix.python-version == '3.7' || matrix.python-version == '3.8' || matrix.python-version == '3.9'

      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage.xml
        if: matrix.python-version == '3.8'
